import { DataSource } from 'typeorm';
import { v4 as uuidv4 } from 'uuid';
// import { SeedUserIds } from 'src/database/typeorm-seeds/core/users';
// TODO: get SeedUserIds from database

const tableName = 'workspaceMember';

// const WorkspaceMemberIds = {
//   Tim: '20202020-0687-4c41-b707-ed1bfca972a7',
//   Jony: '20202020-77d5-4cb6-b60a-f4a835a85d61',
//   Phil: '20202020-1553-45c6-a028-5a9064cce07f',
// };

// Get users from table core.users to seed workspaceMember with them
// WorkspaceMemberIds is autogenerated with uuidv4()

const getUsers = async (
  workspaceDataSource: DataSource,
  schemaName: string,
  workspaceId: string,
) => {
  return await workspaceDataSource
    .createQueryBuilder()
    .select()
    .from(`${schemaName}.user`, 'user')
    .where('"user"."defaultWorkspaceId" = :workspaceId', { workspaceId })
    .execute();
};

export const seedWorkspaceMember = async (
  workspaceDataSource: DataSource,
  schemaName: string,
  workspaceId: string,
) => {
  const users = await getUsers(workspaceDataSource, 'core', workspaceId);

  const userValues = users.map((user) => ({
    id: uuidv4(),
    nameFirstName: user.nameFirstName,
    nameLastName: user.nameLastName,
    locale: 'en',
    colorScheme: 'Light',
    userId: user.id,
  }));

  await workspaceDataSource
    .createQueryBuilder()
    .insert()
    .into(`${schemaName}.${tableName}`, [
      'id',
      'nameFirstName',
      'nameLastName',
      'locale',
      'colorScheme',
      'userId',
    ])
    .orIgnore()
    .values(userValues)
    .execute();
};
